---
- module_defaults:
    group/infoblox.universal_ddi.all:
      portal_url: "{{ portal_url }}"
      portal_key: "{{ portal_key }}"

  block:
    # Create a cloud discovery with a random name to avoid conflicts
    - ansible.builtin.set_fact:
        cloud_discovery_provider_aws_name: "test_aws_{{ 999999 | random | string }}"
        cloud_discovery_provider_aws_name_1: "test_aws_{{ 999999 | random | string }}"
        cloud_discovery_provider_azure_name: "test_azure_{{ 999999 | random | string }}"
        cloud_discovery_provider_gcp_name: "test_gcp_{{ 999999 | random | string }}"
        config_access_id: "arn:aws:iam::{{ 999999999999 | random | string }}:role/infoblox_discovery"
        config_access_id_1: "arn:aws:iam::{{ 999999999999 | random | string }}:role/infoblox_discovery"
        tag_value: "site-{{ 999999 | random | string }}"

    - name: Create an AWS cloud discovery provider (check mode)
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: present
      check_mode: true
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 0

    - name: Create an AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].name == cloud_discovery_provider_aws_name
          - aws_provider_info.objects[0].provider_type == "Amazon Web Services"
          - aws_provider_info.objects[0].account_preference == "single"
          - aws_provider_info.objects[0].credential_preference.access_identifier_type == "role_arn"
          - aws_provider_info.objects[0].credential_preference.credential_type == "dynamic"

    - name: Create an AWS cloud discovery provider (idempotent)
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: present
      register: aws_provider
    - assert:
        that:
          - aws_provider is not changed
          - aws_provider is not failed

    - name: Delete an AWS cloud discovery provider (check mode)
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: absent
      check_mode: true
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1

    - name: Delete an AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: absent
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 0

    - name: Delete an AWS cloud discovery provider (idempotent)
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        state: absent
      register: aws_provider
    - assert:
        that:
          - aws_provider is not changed
          - aws_provider is not failed

    - name: Create an AWS cloud discovery provider with additional config.
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        additional_config:
          excluded_accounts:
            - "123456789012"
          forward_zone_enabled: true
          internal_ranges_enabled: true
          object_type:
            discover_new: true
            version: 1
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].additional_config.excluded_accounts == ["123456789012"]
          - aws_provider_info.objects[0].additional_config.forward_zone_enabled == true
          - aws_provider_info.objects[0].additional_config.internal_ranges_enabled == true
          - aws_provider_info.objects[0].additional_config.object_type.discover_new == true
          - aws_provider_info.objects[0].additional_config.object_type.version == 1

    - name: Create an AWS cloud discovery provider with description
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        description: "This is a test description"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].description == "This is a test description"

    - name: Create an AWS cloud discovery provider with destinations
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        destination_types_enabled:
          - "DNS"
        destinations:
          - config:
              dns:
                sync_type: "read_only"
                view_id: "{{ _view.id }}"
            destination_type: "DNS"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].destination_types_enabled == ["DNS"]
          - aws_provider_info.objects[0].destinations | length == 2 #IPAM is default and appended to the destinations list while creating the job.

    - name: Create an AWS cloud discovery provider with destinations ACCOUNTS and IPAM.
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        destination_types_enabled:
          - "DNS"
          - "ACCOUNTS"
        destinations:
          - config:
              dns:
                sync_type: "read_only"
                view_id: "{{ _view.id }}"
              ipam:
                disable_ipam_projection: true
            destination_type: "DNS"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].destination_types_enabled == ["DNS", "ACCOUNTS"]
          - aws_provider_info.objects[0].destinations | length == 2

    - name: Create an AWS cloud discovery provider with sync interval 15 min
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        sync_interval: "15"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].sync_interval == "15"

    - name: Create an AWS cloud discovery provider with sync interval 1440 min
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        sync_interval: "1440"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].sync_interval == "1440"

    - name: Create an AWS cloud discovery provider with sync interval auto
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        sync_interval: "Auto"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].sync_interval == "Auto"

    - name: Create an AWS cloud discovery provider with tags
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        tags:
          location: "{{ tag_value }}"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].tags.location == tag_value

    - name: Create an AWS cloud discovery provider with desired_state
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id }}"
        desired_state: "disabled"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name }}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].desired_state == "disabled"

    - name: Create an AWS cloud discovery provider with auto discover multiple
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name_1 }}"
        provider_type: "Amazon Web Services"
        account_preference: "auto_discover_multiple"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
                access_identifier: "{{ config_access_id_1 }}"
        desired_state: "disabled"
        state: present
      register: aws_provider
    - name: Get AWS cloud discovery provider
      infoblox.universal_ddi.cloud_discovery_providers_info:
        filters:
          name: "{{ cloud_discovery_provider_aws_name_1}}"
      register: aws_provider_info
    - assert:
        that:
          - aws_provider is changed
          - aws_provider_info is not failed
          - aws_provider_info.objects | length == 1
          - aws_provider_info.objects[0].account_preference == "auto_discover_multiple"

  always:
    - name: "Delete an AWS cloud discovery provider with auto discover multiple"
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name_1}}"
        provider_type: "Amazon Web Services"
        account_preference: "auto_discover_multiple"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
              access_identifier: "{{ config_access_id }}"
        state: absent
      ignore_errors: true

    - name: "Delete an AWS cloud discovery provider "
      infoblox.universal_ddi.cloud_discovery_providers:
        name: "{{ cloud_discovery_provider_aws_name }}"
        provider_type: "Amazon Web Services"
        account_preference: "single"
        credential_preference:
          access_identifier_type: "role_arn"
          credential_type: "dynamic"
        source_configs:
          - credential_config:
              access_identifier: "{{ config_access_id }}"
        state: absent
      ignore_errors: true

    - name: "Clean up DNS View"
      ansible.builtin.include_role:
        name: "setup_view"
        tasks_from: cleanup.yml
